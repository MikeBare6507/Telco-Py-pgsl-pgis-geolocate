from sqlalchemy import create_engine, text
import pandas as pd
import numpy as np  # Don't forget to import numpy

# Create a SQLAlchemy engine
engine = create_engine('postgresql://postgres:[PASSWORD]@localhost/postgis_34_sample')   #replace [PASSWORD] with actual password

# Step 1: Retrieve cid and mkt_id from cid_fip table
cid_fip_query = "SELECT cid, mkt_id FROM cid_fip;"
cid_fip_df = pd.read_sql(cid_fip_query, engine)

# Step 2: Retrieve the fip_type distribution for each mkt_id
fip_assign_query = "SELECT mkt_id, fip_type FROM cid_fip_assign GROUP BY mkt_id, fip_type;"
fip_assign_df = pd.read_sql(fip_assign_query, engine)

# Step 3: Define weighted probabilities for each mkt_id
probabilities_by_mkt = {
   'ARKA': {
        'C1': 0.132532564907335,
        'C4': 0.176058367789863,
        'C5': 0.220136382774967,
        'r01': 0.0634011218240332,
        'r02': 0.177497174188218,
        'rr1': 0.164063112231547,
        'rr2': 0.0663112762840342
    },
    'AUSA': {
        'C1': 0.743928860031516,
        'C4': 0.0944272464011086,
        'C5': 0.0560953473623929,
        'r01': 0.0341665037825032,
        'r02': 0.0424044601144014,
        'rr1': 0.0166651063734777,
        'rr2': 0.0123124759345992
    },
    'AUSB': {
        'C1': 0.350989312702577,
        'C3': 0.213611665660026,
        'C4': 0.150177161088647,
        'C5': 0.103915870959413,
        'r01': 0.0561353985605806,
        'r02': 0.0574799555541212,
        'rr1': 0.0438292153273734,
        'rr2': 0.0238614201472616
    },
    'CHIA': {
        'C1': 1.0
    },
    'CHIB': {
        'C1': 0.261414961146864,
        'C3': 0.302551271720172,
        'C4': 0.104424434183147,
        'C5': 0.129821510518561,
        'r01': 0.0263002461393882,
        'r02': 0.0300292981258128,
        'rr1': 0.13909839647105,
        'rr2': 0.00635988169500233
    },
    'CHIC': {
        'C1': 0.195540542806596,
        'C2': 0.145963116987649,
        'C4': 0.267934459079895,
        'C5': 0.0995044814662653,
        'r01': 0.0245598185614032,
        'r02': 0.0587424225909498,
        'rr1': 0.14853650152177,
        'rr2': 0.0592186569854698
    },
    'DFWA': {
        'C1': 0.769643204212287,
        'C4': 0.178524816095271,
        'r02': 0.0114562780863306,
        'rr1': 0.0260611700404619,
        'rr2': 0.0143145315656491
    },
    'DFWB': {
        'C1': 0.419601907093259,
        'C2': 0.357302870297554,
        'C5': 0.192612477309413,
        'r01': 0.0140576188139204,
        'rr1': 0.0164251264858515
    },
    'DFWC': {
        'C1': 0.813741977818953,
        'C5': 0.107015875879904,
        'r01': 0.0264605709271455,
        'r02': 0.0252233641998869,
        'rr1': 0.0109528843610746,
        'rr2': 0.0166053268130341
    },
    'ETXA': {
        'C1': 0.156313246446148,
        'C5': 0.258209192045584,
        'r01': 0.199370539901624,
        'r02': 0.122636930334259,
        'rr1': 0.248518907570057,
        'rr2': 0.014951183702326
    },
    'HOUA': {
        'C1': 0.853773523617997,
        'C2': 0.111963976228613,
        'C5': 0.0137870002302645,
        'r01': 0.00494491335483912,
        'rr1': 0.0155305865682857
    },
    'HOUB': {
        'C1': 0.542371730558034,
        'C3': 0.24524094233231,
        'C5': 0.0601970201753194,
        'r01': 0.051301844031847,
        'r02': 0.0611284625860743,
        'rr2': 0.0397600003164135
    },
    'HOUC': {
        'C1': 0.395604469984635,
        'C4': 0.289387057982099,
        'C5': 0.199037504822628,
        'rr1': 0.115970967210636
    },
    'IOWA': {
        'C1': 0.154339827148521,
        'C4': 0.174845605633705,
        'C5': 0.196915466518136,
        'r01': 0.124248950513247,
        'r02': 0.231249426006834,
        'rr1': 0.0498117929305356,
        'rr2': 0.0685889312490185
    },
    'KSCA': {
        'C1': 0.329838959162172,
        'C4': 0.188295982848847,
        'C5': 0.108528414708281,
        'r01': 0.070501338040814,
        'r02': 0.111002762616199,
        'rr1': 0.145185540938424,
        'rr2': 0.0466470016852607
    },
    'KSCB':{
	'C1': .484583405027669,
	'r01': .0591714169946104,
	'r02': .17784358238558,
	'rr1': .225415318350604,
	'rr2': .0529862772415349,
    },
    'LAUA':{
	'C1': .153327698552187,
	'C4': .287586653221962,
	'C5': .204789273059525,
	'r01': .07996197529737,
	'r02': .102064169371048,
	'rr1': .15782265611678,
	'rr2': .0144475743811251,
    },
    'MNAA':{
	'C1': .372391971851326,
	'C3': .127819131578893,
	'C4': .137171318642394,
	'C5': .100377138530051,
	'r01': .060422363771455,
	'r02': .0824881205285809,
	'rr1': .0955018551821751,
	'rr2': .0238280999151227,
    },
    'MNAB':{
	'C1': .243858311483219,
	'C3': .160652752937789,
	'C4': .206528942148373,
	'r01': .154769446895944,
	'r02': .0734415486083548,
	'rr1': .157876658956766,
	'rr2': .0028723389695517,
    },
    'NDAA':{
	'C1': .2368456181154,
	'C5': .126374994544945,
	'r01': .142305036362749,
	'r02': .212658549546011,
	'rr1': .179833242201839,
	'rr2': .101982559229053,
    },
    'NOLA':{
	'C1': .562095195587719,
	'C5': .264146395893773,
	'rr1': .121179583638856,
	'rr2': .0525788248796505,
    },
    'NOLB':{
	'C1': .429303070211724,
	'C4': .295785418338986,
	'C5': .148867592507708,
	'r01': .0997544903886788,
	'r02': .0262894285529019,
    },
    'OGAA':{
	'C1': .333562182058811,
	'r02': .235569088878779,
	'rr1': .294496257082592,
	'rr2': .136372471979817,
    },
    'OKCA':{
	'C1': .539096207603208,
	'C4': .104533449959277,
	'C5': .0820026173136721,
	'r01': .0290084470312175,
	'r02': .110858737501582,
	'rr1': .108191325223226,
	'rr2': .0263092153678151,
    },
    'OKCB':{
	'C1': .2819458238287,
	'r01': .0753148573756431,
	'r02': .0995837519188149,
	'rr1': .468876798009488,
	'rr2': .074278768867353,
    },
    'OMAA':{
	'C1': .587850884603316,
	'C4': .191688188393553,
	'r02': .0962212272613904,
	'rr1': .0641277063068716,
	'rr2': .0601119934348676,
    },
    'SANA':{
	'C1': .71422163106324,
	'C4': .118795111516486,
	'r01': .0287206581864894,
	'r02': .0223519944151116,
	'rr1': .103823046622016,
	'rr2': .0120875581966554,
    },
    'SANB':{
	'C1': .408886862462071,
	'C3': .363533614633097,
	'C4': .125426950495811,
	'r01': .0492154065620542,
	'r02': .0224418422285853,
	'rr1': .014575247060768,
	'rr2': .0159200765576121,
    },
    'SDAA':{
	'C1': .222421720894089,
	'C5': .123182660457646,
	'r01': .0431966003020299,
	'r02': .296022069164635,
	'rr1': .206933380852112,
	'rr2': .108243568329485,
    },
    'STLA':{
	'C1': .264797754246059,
	'C3': .0795291195120311,
	'C4': .138620190424955,
	'C5': .153768744832933,
	'r01': .0203792412801008,
	'r02': .071902364027853,
	'rr1': .192465015578665,
	'rr2': .0785375700974012,
    },
    'STLB':{
	'C1': .303531132505074,
	'C3': .171512754838611,
	'C4': .184921459853026,
	'C5': .0810502321754748,
	'r02': .0397250290748361,
	'rr1': .0957361985519292,
	'rr2': .123523193001047,
    },
    'TULA':{
	'C1': .466691490719221,
	'C5': .17981190899056,
	'r01': .173345801143998,
	'r02': .0338450853605728,
	'rr1': .128851476159495,
	'rr2': .0174542376261511,
    },
    'WIMA':{
	'C1': .292814951134408,
	'C5': .166890296082565,
	'r01': .0394715914157593,
	'r02': .119460869719395,
	'rr1': .34984071293023,
	'rr2': .0315215787176413,
    },
    'WIMB':{
	'C1': .236283393496811,
	'C3': .102355794393063,
	'C4': .292179971836802,
	'C5': .239077329581593,
	'r01': .0200489875659909,
	'r02': .0251781200273332,
	'rr1': .0787095732488353,
	'rr2': .00616682984956908,
    },
    'WTXA':{
	'C1': .338337183802001,
	'C3': .121411511070862,
	'C4': .130993061339509,
	'C5': .148239851823074,
	'r02': .119874710921716,
	'rr1': .0675594073704653,
	'rr2': .0735842736723699,
    },

}



# Function to assign fip_type based on weighted probabilities
def assign_fip_type(mkt_id):
    fip_types = list(probabilities_by_mkt[mkt_id].keys())
    probabilities = list(probabilities_by_mkt[mkt_id].values())
    return np.random.choice(fip_types, p=probabilities)

# Step 4: Assign fip_type to each cid based on weighted probabilities
cid_fip_df['fip_type'] = cid_fip_df['mkt_id'].apply(assign_fip_type)

# Step 5: SQL update query with parameter placeholders
update_query = text("""
    UPDATE cid_fip 
    SET fip_type = :fip_type 
    WHERE cid = :cid;
""")

# Step 6: Update the cid_fip table with the assigned fip_type
with engine.begin() as connection:
    for index, row in cid_fip_df.iterrows():
        fip_type_value = row['fip_type']  # The assigned fip_type
        connection.execute(update_query, {"fip_type": fip_type_value, "cid": row['cid']})
